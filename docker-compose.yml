version: '3'

services:
  postgresql:
    container_name: postgres
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: smart_cuisine
      POSTGRES_PASSWORD: forzaMagggicaRoma1
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
      - ./postgresql/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgresql/init-database.sql:/docker-entrypoint-initdb.d/init-database.sql

    ports:
      - "5432:5432"
    command: -c 'config_file=/etc/postgresql/postgresql.conf'
    networks:
      - app-network


  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:4.0
    ports:
      - "5672:5672"
      - "15672:15672" 

    networks:
      - rabbit-network


  authentication-management:
    container_name: authentication-management
    image: authentication-management
    build:
        context: ./authenticationManagement
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      postgresql:
        condition: service_started



  userprofile-management:
    container_name: userprofile-management
    image: userprofile-management
    build:
          context: ./userProfileManagement
    ports:
      - "3001:3000"
    networks:
      - rabbit-network
      - app-network
    depends_on:
      postgresql:
        condition: service_started
      rabbitmq:
        condition: service_started

 ingredientsStorage-management:
    container_name: ingredientsStorage-management
    image: IngredientsStorage-management
    build:
          context: ./ingredientsStorageManagement
    ports:
      - "3003:3000"
    networks:
      - app-network
    depends_on:
      postgresql:
        condition: service_healthy



  recipiesAndIngredients-management:
    container_name: recipiesAndIngredients-management
    image: RecipiesAndIngredients-management
    build:
          context: ./recipiesAndIngredientsManagement
    ports:
      - "3004:3000"
    networks:
      - app-network
    depends_on:
      postgresql:
        condition: service_healthy


  notification-management:
    container_name: notification-management
    image: Notification-management
    build:
          context: ./notificationManagement
    ports:
      - "3005:3000"
    networks:
      - rabbit-network
      - app-network
    depends_on:
      postgresql:
        condition: service_healthy
      rabbitmq:
        condition: service_started

  
networks:
  rabbit-network:
    driver: bridge

  app-network:
    driver: bridge


